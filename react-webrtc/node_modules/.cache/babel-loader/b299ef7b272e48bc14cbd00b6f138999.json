{"ast":null,"code":"export class MediaHelper {\n  async getUserMedia() {\n    // , audio: true\n    try {\n      const constraints = {\n        video: true\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      return stream;\n    } catch (error) {\n      throw Error('Error opening video camera');\n    }\n  }\n\n}\nexport const userMedia = new MediaHelper();","map":{"version":3,"sources":["/Users/davidt/Desktop/Personall Stuff/Projects/webrtc-react/src/utils/mediaHelper.tsx"],"names":["MediaHelper","getUserMedia","constraints","video","stream","navigator","mediaDevices","error","Error","userMedia"],"mappings":"AAAA,OAAO,MAAMA,WAAN,CAAkB;AACvB,QAAaC,YAAb,GAAkD;AAChD;AACA,QAAI;AACF,YAAMC,WAAW,GAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAApB;AACA,YAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBL,YAAvB,CAAoCC,WAApC,CAArB;AACA,aAAOE,MAAP;AACD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,YAAMC,KAAK,CAAC,4BAAD,CAAX;AACD;AACF;;AAVsB;AAazB,OAAO,MAAMC,SAAS,GAAG,IAAIT,WAAJ,EAAlB","sourcesContent":["export class MediaHelper {\n  public async getUserMedia(): Promise<MediaStream> {\n    // , audio: true\n    try {\n      const constraints = { video: true };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      return stream;\n    } catch (error) {\n      throw Error('Error opening video camera');\n    }\n  }\n}\n\nexport const userMedia = new MediaHelper();\n"]},"metadata":{},"sourceType":"module"}