{"ast":null,"code":"var _jsxFileName = \"/Users/davidt/Desktop/Personall Stuff/Projects/webrtc-react/src/components/Video.tsx\";\nimport React, { createRef, useState } from 'react';\nexport const Video = () => {\n  const [src, setSource] = useState('');\n  const videoRef = createRef();\n\n  (async () => {\n    try {\n      var _videoRef$current;\n\n      const constraints = {\n        video: true,\n        audio: true\n      };\n      console.log(videoRef.current);\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      setSource(stream);\n      (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.play(); // videoElement.srcObject = stream;\n    } catch (error) {\n      console.error('Error opening video camera.', error);\n    }\n  })();\n\n  return /*#__PURE__*/React.createElement(\"video\", {\n    width: \"750\",\n    height: \"500\",\n    controls: true,\n    ref: videoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: src,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/davidt/Desktop/Personall Stuff/Projects/webrtc-react/src/components/Video.tsx"],"names":["React","createRef","useState","Video","src","setSource","videoRef","constraints","video","audio","console","log","current","stream","navigator","mediaDevices","getUserMedia","play","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAsCC,QAAtC,QAAsD,OAAtD;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM,CAACC,GAAD,EAAMC,SAAN,IAAmBH,QAAQ,CAAM,EAAN,CAAjC;AAEA,QAAMI,QAAQ,GAAGL,SAAS,EAA1B;;AACA,GAAC,YAAY;AACX,QAAI;AAAA;;AACF,YAAMM,WAAW,GAAG;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,OAArB;AAEA,YAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCT,WAApC,CAArB;AACAF,MAAAA,SAAS,CAACQ,MAAD,CAAT;AACA,2BAAAP,QAAQ,CAACM,OAAT,wEAAkBK,IAAlB,GANE,CAOF;AACD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACQ,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACD;AACF,GAZD;;AAcA,sBACE;AAAO,IAAA,KAAK,EAAC,KAAb;AAAmB,IAAA,MAAM,EAAC,KAA1B;AAAgC,IAAA,QAAQ,MAAxC;AAAyC,IAAA,GAAG,EAAEZ,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,GAAG,EAAEF,GAAb;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAvBM","sourcesContent":["import React, { createRef, useEffect, useState } from 'react';\n\nexport const Video = () => {\n  const [src, setSource] = useState<any>('');\n\n  const videoRef = createRef() as React.RefObject<HTMLVideoElement>;\n  (async () => {\n    try {\n      const constraints = { video: true, audio: true };\n      console.log(videoRef.current);\n\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      setSource(stream);\n      videoRef.current?.play();\n      // videoElement.srcObject = stream;\n    } catch (error) {\n      console.error('Error opening video camera.', error);\n    }\n  })();\n\n  return (\n    <video width=\"750\" height=\"500\" controls ref={videoRef}>\n      <source src={src} type=\"video/mp4\" />\n    </video>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}